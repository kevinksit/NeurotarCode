%Neurotar_headDirectionAnalysis

% Sample data
% load('D:\Code\NeurotarCode\SampleData\PlaceCells\floating_data_WTR010_07_24_session1.mat')
% load('D:\Code\NeurotarCode\SampleData\PlaceCells\TSeries-07242019-1414-001_registered_data.mat')

load('D:\_HeadDirectionNeurotarData\190731_JBA_MJG022_RSC_150\TSeries-07312019-1437-001\TSeries-07312019-1437-001_registered_data.mat')
load('D:\_HeadDirectionNeurotarData\190731_JBA_MJG022_RSC_150\TSeries-07312019-1437-001\floating_data_MJG022_07_31_session1.mat')

% if you need it...
%n = NeurotarDataExtractor();
%n.saveData;

hdp = HeadDirectionPreprocessor(data,floating);
hdp.setForceTimeLock(true);
[data, floating] = hdp.processData(10); % Input argument is the average window size for meaning across indices


hda = HeadDirectionAnalysis(data, floating);
hpc = HPC_PlaceCellAnalyzer(data, floating);
% If you want use raw alpha, but not recommended...
hda.removeMovingSamples();

%% Working on better analysis
% Current issue: not sure the best way to be able to figure out if they're actually "head directiony"
hda.calculateHeadDirectionIdx();

isHeadDirection = hda.meanQuadrantCorrelation> 0.2;
disp(num2str(sum(isHeadDirection)));
disp(num2str(find(isHeadDirection)));

%% Visualization
% Visualizing all the cells first...
histogram(hda.meanQuadrantCorrelation)


%% Get the top cells?
top_cells = hda.meanQuadrantCorrelation > prctile(hda.meanQuadrantCorrelation, 99);


%%
plt = RawDataPlots();

binnedData = hda.getPlottingData();
plt.setData(binnedData);

cells2plot = find(isHeadDirection);
for ii = 1:length(cells2plot)
    c = cells2plot(ii);
plt.polarPlot(c,'LineWidth',5);
title(sprintf('Cell #%d', ii))
pause
end

